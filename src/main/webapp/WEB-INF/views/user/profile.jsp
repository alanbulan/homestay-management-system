<%@ page contentType="text/html;charset=UTF-8" language="java" %>
<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %>
<!DOCTYPE html>
<html lang="zh-CN">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>üë§ ‰∏™‰∫∫‰∏≠ÂøÉ - HMS</title>
    <link rel="stylesheet" href="${pageContext.request.contextPath}/static/css/common.css">
    <link rel="stylesheet" href="${pageContext.request.contextPath}/static/css/background.css">
    <style>
        body {
            padding: 0;
        }
        
        /* ÂØºËà™Ê†è */
        .navbar {
            background: var(--bg-primary);
            border-bottom: 1px solid var(--border-color);
            box-shadow: var(--shadow-light);
            position: sticky;
            top: 0;
            z-index: 1000;
            padding: var(--spacing-md) 0;
        }
        
        .navbar-content {
            display: flex;
            justify-content: space-between;
            align-items: center;
            max-width: 1200px;
            margin: 0 auto;
            padding: 0 var(--spacing-md);
        }
        
        .navbar-brand {
            font-size: var(--font-size-xl);
            font-weight: 700;
            color: var(--primary-color);
            text-decoration: none;
        }
        
        .navbar-nav {
            display: flex;
            gap: var(--spacing-md);
            align-items: center;
        }
        
        .nav-link {
            color: var(--text-secondary);
            text-decoration: none;
            padding: var(--spacing-sm) var(--spacing-md);
            border-radius: var(--border-radius-small);
            transition: all var(--transition-fast);
            font-size: var(--font-size-sm);
        }
        
        .nav-link:hover {
            color: var(--primary-color);
            background: rgba(107, 115, 255, 0.1);
        }
        
        /* ‰∏ªË¶ÅÂÜÖÂÆπÂå∫Âüü */
        .main-content {
            max-width: 1200px;
            margin: var(--spacing-xl) auto;
            padding: 0 var(--spacing-md);
            display: grid;
            grid-template-columns: 300px 1fr;
            gap: var(--spacing-2xl);
        }
        
        /* ‰æßËæπÊ†è */
        .sidebar {
            background: var(--bg-primary);
            border-radius: var(--border-radius-large);
            box-shadow: var(--shadow-light);
            padding: var(--spacing-2xl);
            height: fit-content;
            position: sticky;
            top: calc(80px + var(--spacing-md));
        }
        
        .user-avatar {
            width: 80px;
            height: 80px;
            background: linear-gradient(135deg, var(--primary-color), var(--secondary-color));
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: var(--font-size-3xl);
            color: white;
            margin: 0 auto var(--spacing-lg);
        }
        
        .user-info {
            text-align: center;
            margin-bottom: var(--spacing-xl);
        }
        
        .user-name {
            font-size: var(--font-size-lg);
            font-weight: 600;
            color: var(--text-primary);
            margin-bottom: var(--spacing-xs);
        }
        
        .user-email {
            font-size: var(--font-size-sm);
            color: var(--text-secondary);
        }
        
        .sidebar-menu {
            list-style: none;
        }
        
        .menu-item {
            margin-bottom: var(--spacing-sm);
        }
        
        .menu-link {
            display: flex;
            align-items: center;
            gap: var(--spacing-sm);
            padding: var(--spacing-md);
            color: var(--text-secondary);
            text-decoration: none;
            border-radius: var(--border-radius);
            transition: all var(--transition-fast);
        }
        
        .menu-link:hover,
        .menu-link.active {
            background: rgba(107, 115, 255, 0.1);
            color: var(--primary-color);
        }
        
        /* ÂÜÖÂÆπÂå∫Âüü */
        .content-area {
            background: var(--bg-primary);
            border-radius: var(--border-radius-large);
            box-shadow: var(--shadow-light);
            padding: var(--spacing-2xl);
        }
        
        .content-header {
            margin-bottom: var(--spacing-xl);
            padding-bottom: var(--spacing-lg);
            border-bottom: 1px solid var(--border-color);
        }
        
        .content-title {
            font-size: var(--font-size-2xl);
            font-weight: 600;
            color: var(--text-primary);
            margin-bottom: var(--spacing-sm);
        }
        
        .content-subtitle {
            color: var(--text-secondary);
            font-size: var(--font-size-sm);
        }
        
        /* Ë°®ÂçïÊ†∑Âºè */
        .form-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
            gap: var(--spacing-lg);
            margin-bottom: var(--spacing-xl);
        }
        
        .form-group {
            display: flex;
            flex-direction: column;
        }
        
        .form-label {
            font-size: var(--font-size-sm);
            color: var(--text-primary);
            margin-bottom: var(--spacing-sm);
            font-weight: 500;
        }
        
        .form-input {
            padding: var(--spacing-md);
            border: 2px solid var(--border-color);
            border-radius: var(--border-radius);
            font-size: var(--font-size-base);
            transition: all var(--transition-fast);
        }
        
        .form-input:focus {
            outline: none;
            border-color: var(--primary-color);
            box-shadow: 0 0 0 3px rgba(107, 115, 255, 0.1);
        }
        
        .form-input:disabled {
            background: var(--bg-tertiary);
            color: var(--text-light);
            cursor: not-allowed;
        }
        
        .form-actions {
            display: flex;
            gap: var(--spacing-md);
            justify-content: flex-end;
        }
        
        .btn {
            padding: var(--spacing-md) var(--spacing-xl);
            border: none;
            border-radius: var(--border-radius);
            font-size: var(--font-size-base);
            font-weight: 500;
            cursor: pointer;
            transition: all var(--transition-normal);
            text-decoration: none;
            display: inline-flex;
            align-items: center;
            gap: var(--spacing-sm);
        }
        
        .btn-primary {
            background: linear-gradient(135deg, var(--primary-color), var(--primary-light));
            color: white;
        }
        
        .btn-primary:hover {
            background: linear-gradient(135deg, var(--primary-dark), var(--primary-color));
            transform: translateY(-2px);
            box-shadow: var(--shadow-medium);
        }
        
        .btn-secondary {
            background: var(--bg-secondary);
            color: var(--text-secondary);
            border: 2px solid var(--border-color);
        }
        
        .btn-secondary:hover {
            border-color: var(--primary-color);
            color: var(--primary-color);
        }
        
        .btn-danger {
            background: linear-gradient(135deg, var(--error-color), #ff8a80);
            color: white;
        }
        
        .btn-danger:hover {
            background: linear-gradient(135deg, #d32f2f, var(--error-color));
            transform: translateY(-2px);
            box-shadow: var(--shadow-medium);
        }
        
        /* ÁªüËÆ°Âç°Áâá */
        .stats-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: var(--spacing-lg);
            margin-bottom: var(--spacing-xl);
        }
        
        .stat-card {
            background: linear-gradient(135deg, var(--bg-primary), var(--bg-secondary));
            border: 1px solid var(--border-color);
            border-radius: var(--border-radius-large);
            padding: var(--spacing-xl);
            text-align: center;
            transition: all var(--transition-normal);
        }
        
        .stat-card:hover {
            transform: translateY(-4px);
            box-shadow: var(--shadow-medium);
        }
        
        .stat-icon {
            font-size: var(--font-size-3xl);
            margin-bottom: var(--spacing-md);
        }
        
        .stat-number {
            font-size: var(--font-size-2xl);
            font-weight: 700;
            color: var(--primary-color);
            margin-bottom: var(--spacing-xs);
        }
        
        .stat-label {
            font-size: var(--font-size-sm);
            color: var(--text-secondary);
        }
        
        /* Ê∂àÊÅØÊ†∑Âºè */
        .message {
            padding: var(--spacing-md);
            border-radius: var(--border-radius);
            margin-bottom: var(--spacing-md);
            font-size: var(--font-size-sm);
        }
        
        .message.success {
            background: linear-gradient(135deg, #e6ffe6, #ccffcc);
            color: var(--success-color);
            border-left: 4px solid var(--success-color);
        }
        
        .message.error {
            background: linear-gradient(135deg, #ffe6e6, #ffcccc);
            color: var(--error-color);
            border-left: 4px solid var(--error-color);
        }
        
        /* ÂìçÂ∫îÂºè */
        @media (max-width: 768px) {
            .main-content {
                grid-template-columns: 1fr;
                gap: var(--spacing-lg);
            }
            
            .sidebar {
                position: static;
            }
            
            .form-grid {
                grid-template-columns: 1fr;
            }
            
            .stats-grid {
                grid-template-columns: repeat(2, 1fr);
            }
            
            .form-actions {
                flex-direction: column;
            }
        }
        
        @media (max-width: 480px) {
            .stats-grid {
                grid-template-columns: 1fr;
            }
        }
    </style>
</head>
<body>
    <!-- ÂØºËà™Ê†è -->
    <nav class="navbar">
        <div class="navbar-content">
            <a href="${pageContext.request.contextPath}/" class="navbar-brand">üè† HMS</a>
            <div class="navbar-nav">
                <a href="${pageContext.request.contextPath}/" class="nav-link">üè† È¶ñÈ°µ</a>
                <a href="${pageContext.request.contextPath}/room/list" class="nav-link">üè° ÊàøÊ∫ê</a>
                <c:choose>
                    <c:when test="${not empty sessionScope.currentUser}">
                        <!-- Â∑≤ÁôªÂΩïÁî®Êà∑ -->
                        <a href="${pageContext.request.contextPath}/order/my" class="nav-link">üìã ÊàëÁöÑËÆ¢Âçï</a>
                        <a href="${pageContext.request.contextPath}/user/profile" class="nav-link">üë§ ${sessionScope.currentUser.realName}</a>
                        <a href="#" class="nav-link" onclick="logout()">üö™ ÈÄÄÂá∫</a>
                    </c:when>
                    <c:otherwise>
                        <!-- Êú™ÁôªÂΩïÁî®Êà∑ -->
                        <a href="${pageContext.request.contextPath}/user/login" class="nav-link">üë§ ÁôªÂΩï</a>
                        <a href="${pageContext.request.contextPath}/user/register" class="nav-link">üìù Ê≥®ÂÜå</a>
                    </c:otherwise>
                </c:choose>
            </div>
        </div>
    </nav>
    
    <div class="main-content">
        <!-- ‰æßËæπÊ†è -->
        <div class="sidebar">
            <div class="user-avatar" id="userAvatar">üë§</div>
            <div class="user-info">
                <div class="user-name" id="userName">Âä†ËΩΩ‰∏≠...</div>
                <div class="user-email" id="userEmail">Âä†ËΩΩ‰∏≠...</div>
            </div>
            
            <ul class="sidebar-menu">
                <li class="menu-item">
                    <a href="#" class="menu-link active" onclick="showSection('profile')">
                        üë§ ‰∏™‰∫∫‰ø°ÊÅØ
                    </a>
                </li>
                <li class="menu-item">
                    <a href="#" class="menu-link" onclick="showSection('password')">
                        üîí ‰øÆÊîπÂØÜÁ†Å
                    </a>
                </li>
                <li class="menu-item">
                    <a href="#" class="menu-link" onclick="showSection('orders')">
                        üìã ËÆ¢ÂçïÁªüËÆ°
                    </a>
                </li>
            </ul>
        </div>
        
        <!-- ÂÜÖÂÆπÂå∫Âüü -->
        <div class="content-area">
            <div id="messageContainer"></div>
            
            <!-- ‰∏™‰∫∫‰ø°ÊÅØ -->
            <div id="profileSection" class="content-section">
                <div class="content-header">
                    <h2 class="content-title">üë§ ‰∏™‰∫∫‰ø°ÊÅØ</h2>
                    <p class="content-subtitle">ÁÆ°ÁêÜÊÇ®ÁöÑ‰∏™‰∫∫ËµÑÊñô‰ø°ÊÅØ</p>
                </div>
                
                <form id="profileForm">
                    <div class="form-grid">
                        <div class="form-group">
                            <label class="form-label">Áî®Êà∑Âêç</label>
                            <input type="text" class="form-input" id="username" disabled>
                        </div>
                        
                        <div class="form-group">
                            <label class="form-label">ÁúüÂÆûÂßìÂêç</label>
                            <input type="text" class="form-input" id="realName" name="realName">
                        </div>
                        
                        <div class="form-group">
                            <label class="form-label">ÈÇÆÁÆ±Âú∞ÂùÄ</label>
                            <input type="email" class="form-input" id="email" name="email">
                        </div>
                        
                        <div class="form-group">
                            <label class="form-label">ÊâãÊú∫Âè∑Á†Å</label>
                            <input type="tel" class="form-input" id="phone" name="phone">
                        </div>
                    </div>
                    
                    <div class="form-actions">
                        <button type="button" class="btn btn-secondary" onclick="loadUserInfo()">
                            üîÑ ÈáçÁΩÆ
                        </button>
                        <button type="submit" class="btn btn-primary">
                            ‚ú® ‰øùÂ≠ò‰øÆÊîπ
                        </button>
                    </div>
                </form>
            </div>
            
            <!-- ‰øÆÊîπÂØÜÁ†Å -->
            <div id="passwordSection" class="content-section" style="display: none;">
                <div class="content-header">
                    <h2 class="content-title">üîí ‰øÆÊîπÂØÜÁ†Å</h2>
                    <p class="content-subtitle">‰∏∫‰∫ÜË¥¶Êà∑ÂÆâÂÖ®ÔºåËØ∑ÂÆöÊúüÊõ¥Êç¢ÂØÜÁ†Å</p>
                </div>
                
                <form id="passwordForm">
                    <div class="form-grid">
                        <div class="form-group">
                            <label class="form-label">ÂΩìÂâçÂØÜÁ†Å</label>
                            <input type="password" class="form-input" id="oldPassword" name="oldPassword" required>
                        </div>
                        
                        <div class="form-group">
                            <label class="form-label">Êñ∞ÂØÜÁ†Å</label>
                            <input type="password" class="form-input" id="newPassword" name="newPassword" required>
                        </div>
                        
                        <div class="form-group">
                            <label class="form-label">Á°ÆËÆ§Êñ∞ÂØÜÁ†Å</label>
                            <input type="password" class="form-input" id="confirmPassword" name="confirmPassword" required>
                        </div>
                    </div>
                    
                    <div class="form-actions">
                        <button type="button" class="btn btn-secondary" onclick="clearPasswordForm()">
                            üîÑ Ê∏ÖÁ©∫
                        </button>
                        <button type="submit" class="btn btn-primary">
                            ‚ú® ‰øÆÊîπÂØÜÁ†Å
                        </button>
                    </div>
                </form>
            </div>
            
            <!-- ËÆ¢ÂçïÁªüËÆ° -->
            <div id="ordersSection" class="content-section" style="display: none;">
                <div class="content-header">
                    <h2 class="content-title">üìã ËÆ¢ÂçïÁªüËÆ°</h2>
                    <p class="content-subtitle">Êü•ÁúãÊÇ®ÁöÑËÆ¢ÂçïÁªüËÆ°‰ø°ÊÅØ</p>
                </div>
                
                <div class="stats-grid" id="orderStats">
                    <!-- Âä®ÊÄÅÂä†ËΩΩ -->
                </div>
                
                <div class="form-actions">
                    <a href="${pageContext.request.contextPath}/order/my" class="btn btn-primary">
                        üìã Êü•ÁúãÊâÄÊúâËÆ¢Âçï
                    </a>
                </div>
            </div>
        </div>
    </div>
    
    <script>
        let currentUser = null;
        
        // È°µÈù¢Âä†ËΩΩÊó∂ÂàùÂßãÂåñ
        document.addEventListener('DOMContentLoaded', function() {
            loadUserInfo();
            initializeForms();
        });
        
        // Âä†ËΩΩÁî®Êà∑‰ø°ÊÅØ
        async function loadUserInfo() {
            try {
                const response = await fetch('${pageContext.request.contextPath}/user/current');
                const data = await response.json();
                
                if (data.code === 200) {
                    currentUser = data.data;
                    displayUserInfo(currentUser);
                } else if (data.code === 401) {
                    window.location.href = '${pageContext.request.contextPath}/user/login';
                } else {
                    showMessage('Ëé∑ÂèñÁî®Êà∑‰ø°ÊÅØÂ§±Ë¥•Ôºö' + data.message, 'error');
                }
            } catch (error) {
                console.error('Âä†ËΩΩÁî®Êà∑‰ø°ÊÅØÂ§±Ë¥•:', error);
                showMessage('ÁΩëÁªúÈîôËØØÔºåËØ∑Á®çÂêéÈáçËØï', 'error');
            }
        }
        
        // ÊòæÁ§∫Áî®Êà∑‰ø°ÊÅØ
        function displayUserInfo(user) {
            document.getElementById('userName').textContent = user.realName || user.username;
            document.getElementById('userEmail').textContent = user.email || 'Êú™ËÆæÁΩÆÈÇÆÁÆ±';
            document.getElementById('userAvatar').textContent = (user.realName || user.username).charAt(0).toUpperCase();
            
            // Â°´ÂÖÖË°®Âçï
            document.getElementById('username').value = user.username || '';
            document.getElementById('realName').value = user.realName || '';
            document.getElementById('email').value = user.email || '';
            document.getElementById('phone').value = user.phone || '';
        }
        
        // ÂàùÂßãÂåñË°®Âçï
        function initializeForms() {
            // ‰∏™‰∫∫‰ø°ÊÅØË°®Âçï
            document.getElementById('profileForm').addEventListener('submit', function(e) {
                e.preventDefault();
                updateProfile();
            });
            
            // ÂØÜÁ†Å‰øÆÊîπË°®Âçï
            document.getElementById('passwordForm').addEventListener('submit', function(e) {
                e.preventDefault();
                changePassword();
            });
        }
        
        // Êõ¥Êñ∞‰∏™‰∫∫‰ø°ÊÅØ
        async function updateProfile() {
            const formData = {
                realName: document.getElementById('realName').value,
                email: document.getElementById('email').value,
                phone: document.getElementById('phone').value
            };
            
            try {
                const response = await fetch('${pageContext.request.contextPath}/user/profile', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify(formData)
                });
                
                const data = await response.json();
                
                if (data.code === 200) {
                    showMessage('‰∏™‰∫∫‰ø°ÊÅØÊõ¥Êñ∞ÊàêÂäü', 'success');
                    currentUser = data.data;
                    displayUserInfo(currentUser);
                } else {
                    showMessage(data.message || 'Êõ¥Êñ∞Â§±Ë¥•', 'error');
                }
            } catch (error) {
                console.error('Êõ¥Êñ∞‰∏™‰∫∫‰ø°ÊÅØÂ§±Ë¥•:', error);
                showMessage('ÁΩëÁªúÈîôËØØÔºåËØ∑Á®çÂêéÈáçËØï', 'error');
            }
        }
        
        // ‰øÆÊîπÂØÜÁ†Å
        async function changePassword() {
            const oldPassword = document.getElementById('oldPassword').value;
            const newPassword = document.getElementById('newPassword').value;
            const confirmPassword = document.getElementById('confirmPassword').value;
            
            if (newPassword !== confirmPassword) {
                showMessage('‰∏§Ê¨°ËæìÂÖ•ÁöÑÊñ∞ÂØÜÁ†Å‰∏ç‰∏ÄËá¥', 'error');
                return;
            }
            
            if (newPassword.length < 6) {
                showMessage('Êñ∞ÂØÜÁ†ÅËá≥Â∞ë6‰Ωç', 'error');
                return;
            }
            
            try {
                const response = await fetch('${pageContext.request.contextPath}/user/changePassword', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/x-www-form-urlencoded',
                    },
                    body: 'oldPassword=' + encodeURIComponent(oldPassword) + '&newPassword=' + encodeURIComponent(newPassword)
                });
                
                const data = await response.json();
                
                if (data.code === 200) {
                    showMessage('ÂØÜÁ†Å‰øÆÊîπÊàêÂäü', 'success');
                    clearPasswordForm();
                } else {
                    showMessage(data.message || 'ÂØÜÁ†Å‰øÆÊîπÂ§±Ë¥•', 'error');
                }
            } catch (error) {
                console.error('‰øÆÊîπÂØÜÁ†ÅÂ§±Ë¥•:', error);
                showMessage('ÁΩëÁªúÈîôËØØÔºåËØ∑Á®çÂêéÈáçËØï', 'error');
            }
        }
        
        // Âä†ËΩΩËÆ¢ÂçïÁªüËÆ°
        async function loadOrderStats() {
            try {
                const response = await fetch('${pageContext.request.contextPath}/order/my/statistics');
                const data = await response.json();
                
                if (data.code === 200) {
                    displayOrderStats(data.data);
                } else {
                    showMessage('Ëé∑ÂèñËÆ¢ÂçïÁªüËÆ°Â§±Ë¥•Ôºö' + data.message, 'error');
                }
            } catch (error) {
                console.error('Âä†ËΩΩËÆ¢ÂçïÁªüËÆ°Â§±Ë¥•:', error);
                showMessage('ÁΩëÁªúÈîôËØØÔºåËØ∑Á®çÂêéÈáçËØï', 'error');
            }
        }
        
        // ÊòæÁ§∫ËÆ¢ÂçïÁªüËÆ°
        function displayOrderStats(stats) {
            const container = document.getElementById('orderStats');
            container.innerHTML =
                '<div class="stat-card">' +
                    '<div class="stat-icon">üìã</div>' +
                    '<div class="stat-number">' + (stats.totalOrders || 0) + '</div>' +
                    '<div class="stat-label">ÊÄªËÆ¢ÂçïÊï∞</div>' +
                '</div>' +
                '<div class="stat-card">' +
                    '<div class="stat-icon">‚è≥</div>' +
                    '<div class="stat-number">' + (stats.pendingOrders || 0) + '</div>' +
                    '<div class="stat-label">ÂæÖÁ°ÆËÆ§</div>' +
                '</div>' +
                '<div class="stat-card">' +
                    '<div class="stat-icon">‚úÖ</div>' +
                    '<div class="stat-number">' + (stats.confirmedOrders || 0) + '</div>' +
                    '<div class="stat-label">Â∑≤Á°ÆËÆ§</div>' +
                '</div>' +
                '<div class="stat-card">' +
                    '<div class="stat-icon">üè†</div>' +
                    '<div class="stat-number">' + (stats.checkedInOrders || 0) + '</div>' +
                    '<div class="stat-label">Â∑≤ÂÖ•‰Ωè</div>' +
                '</div>' +
                '<div class="stat-card">' +
                    '<div class="stat-icon">üéâ</div>' +
                    '<div class="stat-number">' + (stats.completedOrders || 0) + '</div>' +
                    '<div class="stat-label">Â∑≤ÂÆåÊàê</div>' +
                '</div>' +
                '<div class="stat-card">' +
                    '<div class="stat-icon">‚ùå</div>' +
                    '<div class="stat-number">' + (stats.cancelledOrders || 0) + '</div>' +
                    '<div class="stat-label">Â∑≤ÂèñÊ∂à</div>' +
                '</div>';
        }
        
        // ÊòæÁ§∫ÊåáÂÆöÈÉ®ÂàÜ
        function showSection(sectionName) {
            // ÈöêËóèÊâÄÊúâÈÉ®ÂàÜ
            document.querySelectorAll('.content-section').forEach(section => {
                section.style.display = 'none';
            });
            
            // ÁßªÈô§ÊâÄÊúâËèúÂçïÈ°πÁöÑactiveÁ±ª
            document.querySelectorAll('.menu-link').forEach(link => {
                link.classList.remove('active');
            });
            
            // ÊòæÁ§∫ÊåáÂÆöÈÉ®ÂàÜ
            document.getElementById(sectionName + 'Section').style.display = 'block';
            
            // Ê∑ªÂä†activeÁ±ªÂà∞ÂØπÂ∫îËèúÂçïÈ°π
            event.target.classList.add('active');
            
            // Â¶ÇÊûúÊòØËÆ¢ÂçïÁªüËÆ°ÔºåÂä†ËΩΩÊï∞ÊçÆ
            if (sectionName === 'orders') {
                loadOrderStats();
            }
        }
        
        // Ê∏ÖÁ©∫ÂØÜÁ†ÅË°®Âçï
        function clearPasswordForm() {
            document.getElementById('passwordForm').reset();
        }
        
        // ÈÄÄÂá∫ÁôªÂΩï
        async function logout() {
            try {
                const response = await fetch('${pageContext.request.contextPath}/user/logout', {
                    method: 'POST'
                });
                
                const data = await response.json();
                
                if (data.code === 200) {
                    window.location.href = '${pageContext.request.contextPath}/';
                } else {
                    showMessage('ÈÄÄÂá∫Â§±Ë¥•', 'error');
                }
            } catch (error) {
                console.error('ÈÄÄÂá∫Â§±Ë¥•:', error);
                window.location.href = '${pageContext.request.contextPath}/';
            }
        }
        
        // ÊòæÁ§∫Ê∂àÊÅØ
        function showMessage(message, type) {
            const container = document.getElementById('messageContainer');
            const messageDiv = document.createElement('div');
            messageDiv.className = `message ${type}`;
            messageDiv.textContent = message;
            
            container.innerHTML = '';
            container.appendChild(messageDiv);
            
            setTimeout(() => {
                if (messageDiv.parentNode) {
                    messageDiv.remove();
                }
            }, 5000);
        }
    </script>
</body>
</html>
