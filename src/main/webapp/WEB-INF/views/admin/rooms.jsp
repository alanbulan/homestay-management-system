<%@ page contentType="text/html;charset=UTF-8" language="java" %>
<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %>
<!DOCTYPE html>
<html lang="zh-CN">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>üè† ÊàøÊ∫êÁÆ°ÁêÜ - HMS</title>
    <link href="https://cdn.bootcdn.net/ajax/libs/bootstrap-icons/1.7.2/font/bootstrap-icons.css" rel="stylesheet">
    <link rel="stylesheet" href="${pageContext.request.contextPath}/static/css/admin.css">
    <style>
        .room-image {
            width: 60px;
            height: 40px;
            object-fit: cover;
            border-radius: 6px;
        }

        /* Ê®°ÊÄÅÊ°ÜÊ†∑Âºè‰øÆÂ§ç */
        .modal {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.5);
            display: none;
            align-items: center;
            justify-content: center;
            z-index: 1050;
        }

        .modal.show {
            display: flex !important;
        }

        .modal-dialog {
            max-width: 900px;
            width: 95%;
            margin: 20px;
        }

        .modal-content {
            background: white;
            border-radius: 8px;
            box-shadow: 0 4px 20px rgba(0, 0, 0, 0.15);
            max-height: 90vh;
            overflow-y: auto;
        }

        .modal-header {
            padding: 20px 24px 16px;
            border-bottom: 1px solid #e9ecef;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .modal-title {
            margin: 0;
            font-size: 18px;
            font-weight: 600;
            color: #333;
        }

        .btn-close {
            background: none;
            border: none;
            font-size: 24px;
            color: #666;
            cursor: pointer;
            padding: 0;
            width: 32px;
            height: 32px;
            display: flex;
            align-items: center;
            justify-content: center;
            border-radius: 4px;
            transition: all 0.2s;
        }

        .btn-close:hover {
            background-color: #f8f9fa;
            color: #333;
        }

        .modal-body {
            padding: 24px;
        }

        .modal-footer {
            padding: 16px 24px 24px;
            display: flex;
            justify-content: flex-end;
            gap: 12px;
        }

        .btn-outline {
            background-color: transparent;
            border: 1px solid #ddd;
            color: #666;
        }

        .btn-outline:hover {
            background-color: #f8f9fa;
            border-color: #bbb;
            color: #333;
        }

        body.modal-open {
            overflow: hidden;
        }

        /* Ë°®ÂçïË°åÂ∏ÉÂ±Ä */
        .form-row {
            display: flex;
            gap: 20px;
            margin-bottom: 20px;
        }

        .form-row .form-group {
            flex: 1;
        }

        .form-group {
            margin-bottom: 20px;
        }

        .form-group.full-width {
            flex: 1 1 100%;
        }

        /* Ë°®ÂçïÊ†∑Âºè‰øÆÂ§ç */
        .form-control, .form-select {
            width: 100% !important;
            max-width: 100% !important;
            box-sizing: border-box;
            padding: 8px 12px;
            border: 1px solid #ddd;
            border-radius: 4px;
            font-size: 14px;
        }

        .form-control:focus, .form-select:focus {
            border-color: #007bff;
            box-shadow: 0 0 0 2px rgba(0, 123, 255, 0.25);
            outline: none;
        }

        .input-group {
            display: flex;
            width: 100%;
        }

        .input-group .form-control {
            flex: 1;
            border-radius: 0 4px 4px 0;
        }

        .input-group-text {
            background-color: #f8f9fa;
            border: 1px solid #ddd;
            padding: 8px 12px;
            font-size: 14px;
            color: #666;
        }

        .input-group-text:first-child {
            border-radius: 4px 0 0 4px;
            border-right: none;
        }

        .input-group-text:last-child {
            border-radius: 0 4px 4px 0;
            border-left: none;
        }

        .form-label {
            font-weight: 500;
            margin-bottom: 6px;
            color: #333;
            font-size: 14px;
        }

        .mb-3 {
            margin-bottom: 20px;
        }

        .row {
            margin-left: -12px;
            margin-right: -12px;
        }

        .col-md-6 {
            padding-left: 12px;
            padding-right: 12px;
        }

        textarea.form-control {
            resize: vertical;
            min-height: 80px;
        }

        .form-text {
            font-size: 12px;
            color: #666;
            margin-top: 4px;
        }



        /* Â§çÈÄâÊ°ÜÁªÑÊ†∑Âºè */
        .checkbox-group {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(120px, 1fr));
            gap: 12px;
            margin-top: 8px;
        }

        .checkbox-group label {
            display: flex;
            align-items: center;
            gap: 6px;
            font-size: 14px;
            cursor: pointer;
        }

        .checkbox-group input[type="checkbox"] {
            margin: 0;
        }

        /* Âä®ÁîªÊïàÊûú */
        @keyframes fadeIn {
            from { opacity: 0; }
            to { opacity: 1; }
        }

        @keyframes slideIn {
            from {
                opacity: 0;
                transform: translateY(-50px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        /* Âº∫Âà∂Ë°®Ê†ºÂØπÈΩê - Ë¶ÜÁõñÊâÄÊúâÂÖ∂‰ªñÊ†∑Âºè */
        .table th,
        .table td,
        table th,
        table td {
            text-align: center !important;
            vertical-align: middle !important;
        }

        .table .text-center,
        table .text-center,
        .text-center {
            text-align: center !important;
        }

        /* Á°Æ‰øùË°®Ê†ºÂÜÖÂÆπÂ±Ö‰∏≠ */
        #roomTableBody td {
            text-align: center !important;
        }

        #roomTableBody th {
            text-align: center !important;
        }

        /* ÂõæÁâáÁÆ°ÁêÜÊ†∑Âºè */
        .image-list {
            border: 1px solid #ddd;
            border-radius: 4px;
            padding: 10px;
            min-height: 60px;
            background-color: #f9f9f9;
        }

        .image-item {
            display: flex;
            align-items: center;
            padding: 8px;
            margin-bottom: 8px;
            background-color: white;
            border: 1px solid #e0e0e0;
            border-radius: 4px;
        }

        .image-item:last-child {
            margin-bottom: 0;
        }

        .image-preview {
            width: 50px;
            height: 50px;
            object-fit: cover;
            border-radius: 4px;
            margin-right: 10px;
        }

        .image-url-input {
            flex: 1;
            margin-right: 10px;
        }

        .image-actions {
            display: flex;
            gap: 5px;
        }

        .cover-badge {
            background-color: #28a745;
            color: white;
            font-size: 10px;
            padding: 2px 6px;
            border-radius: 10px;
            margin-left: 5px;
        }

        /* Âº∫Âà∂Ë¶ÜÁõñÁ≠õÈÄâÂô®Â≠ó‰ΩìÂ§ßÂ∞è */
        .filter-section .form-label {
            font-size: 16px !important;
            font-weight: 500 !important;
        }

        .filter-section .form-control {
            font-size: 16px !important;
            min-height: 40px !important;
            padding: 10px 12px !important;
        }

        .filter-section .filter-title {
            font-size: 18px !important;
            font-weight: 600 !important;
        }
    </style>
</head>
<body>
    <div class="admin-container">
        <!-- ‰æßËæπÊ†è -->
        <nav class="admin-sidebar">
            <div class="sidebar-header">
                <h4>
                    <i class="bi bi-house-door"></i>
                    Ê∞ëÂÆøÁÆ°ÁêÜÁ≥ªÁªü
                </h4>
                <p>ÁÆ°ÁêÜÂëòÂêéÂè∞</p>
            </div>

            <div class="sidebar-nav">
                <ul class="nav-menu">
                    <li class="nav-item">
                        <a class="nav-link" href="${pageContext.request.contextPath}/admin">
                            <i class="bi bi-speedometer2"></i>
                            ‰ª™Ë°®Êùø
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="${pageContext.request.contextPath}/admin/users">
                            <i class="bi bi-people"></i>
                            Áî®Êà∑ÁÆ°ÁêÜ
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link active" href="${pageContext.request.contextPath}/admin/rooms">
                            <i class="bi bi-building"></i>
                            ÊàøÊ∫êÁÆ°ÁêÜ
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="${pageContext.request.contextPath}/admin/orders">
                            <i class="bi bi-receipt"></i>
                            ËÆ¢ÂçïÁÆ°ÁêÜ
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="${pageContext.request.contextPath}/admin/settings">
                            <i class="bi bi-gear"></i>
                            Á≥ªÁªüËÆæÁΩÆ
                        </a>
                    </li>
                </ul>
            </div>
        </nav>

        <!-- ‰∏ªÂÜÖÂÆπÂå∫Âüü -->
        <main class="admin-main">
            <div class="main-content">
                <!-- È°µÈù¢Â§¥ÈÉ® -->
                <div class="page-header">
                    <div>
                        <h1 class="page-title">ÊàøÊ∫êÁÆ°ÁêÜ</h1>
                        <p class="page-subtitle">ÁÆ°ÁêÜÁ≥ªÁªüÊàøÊ∫ê‰ø°ÊÅØ</p>
                    </div>
                    <div>
                        <button type="button" class="btn btn-primary" onclick="showAddRoomModal()">
                            <i class="bi bi-plus"></i> Ê∑ªÂä†ÊàøÊ∫ê
                        </button>
                    </div>
                </div>

                <!-- ÊêúÁ¥¢ÂíåÁ≠õÈÄâ -->
                <div class="filter-section">
                    <h6 class="filter-title">
                        <i class="bi bi-funnel"></i>
                        Á≠õÈÄâÊù°‰ª∂
                    </h6>
                    <div class="form-row">
                        <div class="form-group">
                            <label class="form-label">ÊâÄÂú®ÂüéÂ∏Ç</label>
                            <select class="form-control" id="cityFilter">
                                <option value="">ÂÖ®ÈÉ®ÂüéÂ∏Ç</option>
                                <option value="Âåó‰∫¨">Âåó‰∫¨</option>
                                <option value="‰∏äÊµ∑">‰∏äÊµ∑</option>
                                <option value="ÂπøÂ∑û">ÂπøÂ∑û</option>
                                <option value="Ê∑±Âú≥">Ê∑±Âú≥</option>
                                <option value="Êù≠Â∑û">Êù≠Â∑û</option>
                                <option value="ÊàêÈÉΩ">ÊàêÈÉΩ</option>
                                <option value="Ë•øÂÆâ">Ë•øÂÆâ</option>
                                <option value="Âçó‰∫¨">Âçó‰∫¨</option>
                            </select>
                        </div>
                        <div class="form-group">
                            <label class="form-label">ÊàøÊ∫êÁ±ªÂûã</label>
                            <select class="form-control" id="roomTypeFilter">
                                <option value="">ÂÖ®ÈÉ®ÊàøÂûã</option>
                                <option value="Êï¥Â•óÊàøÂ≠ê">Êï¥Â•óÊàøÂ≠ê</option>
                                <option value="Áã¨Á´ãÊàøÈó¥">Áã¨Á´ãÊàøÈó¥</option>
                                <option value="Âêà‰ΩèÊàøÈó¥">Âêà‰ΩèÊàøÈó¥</option>
                                <option value="Âçï‰∫∫Êàø">Âçï‰∫∫Êàø</option>
                            </select>
                        </div>
                        <div class="form-group">
                            <label class="form-label">ÊàøÊ∫êÁä∂ÊÄÅ</label>
                            <select class="form-control" id="statusFilter">
                                <option value="">ÂÖ®ÈÉ®Áä∂ÊÄÅ</option>
                                <option value="1">ÂèØÁî®</option>
                                <option value="0">‰∏çÂèØÁî®</option>
                                <option value="2">Áª¥Êä§‰∏≠</option>
                            </select>
                        </div>
                        <div class="form-group">
                            <label class="form-label">ÊêúÁ¥¢ÂÖ≥ÈîÆËØç</label>
                            <input type="text" class="form-control" id="searchKeyword" placeholder="ÊàøÊ∫êÂêçÁß∞„ÄÅÂú∞ÂùÄ">
                        </div>
                    </div>
                    <div class="form-actions">
                        <button type="button" class="btn btn-primary" onclick="searchRooms()">
                            <i class="bi bi-search"></i> ÊêúÁ¥¢
                        </button>
                        <button type="button" class="btn btn-secondary" onclick="resetRoomFilters()">
                            <i class="bi bi-arrow-clockwise"></i> ÈáçÁΩÆ
                        </button>
                    </div>
                </div>

                <!-- ÊàøÊ∫êÂàóË°® -->
                <div class="content-card">
                    <div class="table-container">
                        <table class="table">
                            <thead>
                                <tr>
                                    <th class="text-center">ID</th>
                                    <th class="text-center">ÂõæÁâá</th>
                                    <th class="text-center">ÊàøÊ∫êÂêçÁß∞</th>
                                    <th class="text-center">ÂüéÂ∏Ç</th>
                                    <th class="text-center">ÊàøÂûã</th>
                                    <th class="text-center">‰ª∑Ê†º</th>
                                    <th class="text-center">Áä∂ÊÄÅ</th>
                                    <th class="text-center">ÂàõÂª∫Êó∂Èó¥</th>
                                    <th class="text-center">Êìç‰Ωú</th>
                                </tr>
                            </thead>
                            <tbody id="roomTableBody">
                                <tr>
                                    <td>1</td>
                                    <td><span style="color: #6c757d;">Êó†ÂõæÁâá</span></td>
                                    <td>Ê∏©È¶®Â∞èÂ±ã</td>
                                    <td>Âåó‰∫¨</td>
                                    <td>Êï¥Â•óÊàøÂ≠ê</td>
                                    <td>¬•299.00</td>
                                    <td><span class="badge badge-success">ÂèØÁî®</span></td>
                                    <td>2024-01-15</td>
                                    <td>
                                        <button class="btn btn-primary btn-action" onclick="editRoom(1)" title="ÁºñËæë">
                                            <i class="bi bi-pencil"></i>
                                        </button>
                                        <button class="btn btn-danger btn-action" onclick="deleteRoom(1)" title="Âà†Èô§">
                                            <i class="bi bi-trash"></i>
                                        </button>
                                    </td>
                                </tr>
                                <tr>
                                    <td>2</td>
                                    <td><span style="color: #6c757d;">Êó†ÂõæÁâá</span></td>
                                    <td>Áé∞‰ª£ÂÖ¨ÂØì</td>
                                    <td>‰∏äÊµ∑</td>
                                    <td>Áã¨Á´ãÊàøÈó¥</td>
                                    <td>¬•199.00</td>
                                    <td><span class="badge badge-success">ÂèØÁî®</span></td>
                                    <td>2024-01-14</td>
                                    <td>
                                        <button class="btn btn-primary btn-action" onclick="editRoom(2)" title="ÁºñËæë">
                                            <i class="bi bi-pencil"></i>
                                        </button>
                                        <button class="btn btn-danger btn-action" onclick="deleteRoom(2)" title="Âà†Èô§">
                                            <i class="bi bi-trash"></i>
                                        </button>
                                    </td>
                                </tr>
                                <tr>
                                    <td>3</td>
                                    <td><span style="color: #6c757d;">Êó†ÂõæÁâá</span></td>
                                    <td>Êµ∑ÊôØÂà´Â¢Ö</td>
                                    <td>Ê∑±Âú≥</td>
                                    <td>Êï¥Â•óÊàøÂ≠ê</td>
                                    <td>¬•599.00</td>
                                    <td><span class="badge badge-danger">‰∏çÂèØÁî®</span></td>
                                    <td>2024-01-13</td>
                                    <td>
                                        <button class="btn btn-primary btn-action" onclick="editRoom(3)" title="ÁºñËæë">
                                            <i class="bi bi-pencil"></i>
                                        </button>
                                        <button class="btn btn-danger btn-action" onclick="deleteRoom(3)" title="Âà†Èô§">
                                            <i class="bi bi-trash"></i>
                                        </button>
                                    </td>
                                </tr>
                            </tbody>
                        </table>
                    </div>

                    <!-- ÂàÜÈ°µÁªÑ‰ª∂ -->
                    <div class="pagination-wrapper">
                        <div class="pagination-container" id="paginationContainer">
                            <!-- ÂàÜÈ°µÊåâÈíÆÂ∞ÜÈÄöËøáJavaScriptÁîüÊàê -->
                        </div>
                    </div>

                </div>
            </div>
        </main>
    </div>

    <!-- ÁºñËæëÊàøÊ∫êÊ®°ÊÄÅÊ°Ü -->
    <div class="modal fade" id="editRoomModal" tabindex="-1">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">ÁºñËæëÊàøÊ∫ê</h5>
                    <button type="button" class="btn-close" onclick="hideEditRoomModal()">&times;</button>
                </div>
                <div class="modal-body">
                    <form id="editRoomForm">
                        <input type="hidden" name="id" id="editRoomId">
                        <div class="row">
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label class="form-label">ÊàøÊ∫êÂêçÁß∞ *</label>
                                    <input type="text" class="form-control" name="roomName" id="editRoomName" required>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label class="form-label">ÂüéÂ∏Ç *</label>
                                    <select class="form-select" name="city" id="editRoomCity" required>
                                        <option value="">ËØ∑ÈÄâÊã©ÂüéÂ∏Ç</option>
                                        <option value="Âåó‰∫¨">Âåó‰∫¨</option>
                                        <option value="‰∏äÊµ∑">‰∏äÊµ∑</option>
                                        <option value="ÂπøÂ∑û">ÂπøÂ∑û</option>
                                        <option value="Ê∑±Âú≥">Ê∑±Âú≥</option>
                                        <option value="Êù≠Â∑û">Êù≠Â∑û</option>
                                        <option value="ÊàêÈÉΩ">ÊàêÈÉΩ</option>
                                        <option value="Ë•øÂÆâ">Ë•øÂÆâ</option>
                                        <option value="Âçó‰∫¨">Âçó‰∫¨</option>
                                        <option value="Ê≠¶Ê±â">Ê≠¶Ê±â</option>
                                        <option value="ÈáçÂ∫Ü">ÈáçÂ∫Ü</option>
                                    </select>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label class="form-label">ÊàøÂûã *</label>
                                    <select class="form-select" name="roomType" id="editRoomType" required>
                                        <option value="">ËØ∑ÈÄâÊã©ÊàøÂûã</option>
                                        <option value="Âçï‰∫∫Êàø">Âçï‰∫∫Êàø</option>
                                        <option value="Âèå‰∫∫Êàø">Âèå‰∫∫Êàø</option>
                                        <option value="Â•óÊàø">Â•óÊàø</option>
                                        <option value="Êï¥Â•óÊàøÂ≠ê">Êï¥Â•óÊàøÂ≠ê</option>
                                    </select>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label class="form-label">‰ª∑Ê†º *</label>
                                    <div class="input-group">
                                        <span class="input-group-text">¬•</span>
                                        <input type="number" class="form-control" name="pricePerNight" id="editRoomPrice" min="0" step="0.01" required>
                                        <span class="input-group-text">ÂÖÉ/Êôö</span>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="mb-3">
                            <label class="form-label">ËØ¶ÁªÜÂú∞ÂùÄ *</label>
                            <input type="text" class="form-control" name="address" id="editRoomAddress" required>
                        </div>
                        <div class="mb-3">
                            <label class="form-label">ÊàøÊ∫êÊèèËø∞</label>
                            <textarea class="form-control" name="description" id="editRoomDescription" rows="4" placeholder="ËØ∑ÊèèËø∞ÊàøÊ∫êÁöÑÁâπËâ≤„ÄÅËÆæÊñΩÁ≠â‰ø°ÊÅØ"></textarea>
                        </div>
                        <div class="row">
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label class="form-label">ÊúÄÂ§ßÂÖ•‰Ωè‰∫∫Êï∞</label>
                                    <input type="number" class="form-control" name="maxGuests" id="editRoomMaxGuests" min="1" value="2">
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label class="form-label">Áä∂ÊÄÅ</label>
                                    <select class="form-select" name="status" id="editRoomStatus">
                                        <option value="1">ÂèØÁî®</option>
                                        <option value="0">‰∏çÂèØÁî®</option>
                                    </select>
                                </div>
                            </div>
                        </div>
                        <div class="mb-3">
                            <label class="form-label">ÊàøÊ∫êÂõæÁâá</label>
                            <div id="editImageList" class="image-list">
                                <!-- ÂõæÁâáÂàóË°®Â∞ÜÈÄöËøáJavaScriptÂä®ÊÄÅÁîüÊàê -->
                            </div>
                            <div class="mt-2">
                                <button type="button" class="btn btn-outline-primary btn-sm" onclick="addEditImage()">
                                    <i class="bi bi-plus"></i> Ê∑ªÂä†ÂõæÁâá
                                </button>
                            </div>
                            <small class="form-text text-muted">Á¨¨‰∏ÄÂº†ÂõæÁâáÂ∞Ü‰Ωú‰∏∫Â∞ÅÈù¢ÂõæÁâáÊòæÁ§∫</small>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-outline" onclick="hideEditRoomModal()">ÂèñÊ∂à</button>
                    <button type="button" class="btn btn-primary" onclick="updateRoom()">‰øùÂ≠ò</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Ê∑ªÂä†ÊàøÊ∫êÊ®°ÊÄÅÊ°Ü -->
    <div class="modal" id="addRoomModal">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Ê∑ªÂä†ÊàøÊ∫ê</h5>
                    <button type="button" class="btn-close" onclick="closeAddRoomModal()">&times;</button>
                </div>
            <div class="modal-body">
                <form id="addRoomForm">
                    <div class="form-row">
                        <div class="form-group">
                            <label class="form-label">ÊàøÊ∫êÂêçÁß∞ *</label>
                            <input type="text" class="form-control" name="roomName" required>
                        </div>
                        <div class="form-group">
                            <label class="form-label">ÊàøÂûã *</label>
                            <select class="form-control" name="roomType" required>
                                <option value="">ËØ∑ÈÄâÊã©ÊàøÂûã</option>
                                <option value="Êï¥Â•óÊàøÂ≠ê">Êï¥Â•óÊàøÂ≠ê</option>
                                <option value="Áã¨Á´ãÊàøÈó¥">Áã¨Á´ãÊàøÈó¥</option>
                                <option value="Âêà‰ΩèÊàøÈó¥">Âêà‰ΩèÊàøÈó¥</option>
                            </select>
                        </div>
                    </div>

                    <div class="form-row">
                        <div class="form-group">
                            <label class="form-label">ÂüéÂ∏Ç *</label>
                            <select class="form-control" name="city" required>
                                <option value="">ËØ∑ÈÄâÊã©ÂüéÂ∏Ç</option>
                                <option value="Âåó‰∫¨">Âåó‰∫¨</option>
                                <option value="‰∏äÊµ∑">‰∏äÊµ∑</option>
                                <option value="ÂπøÂ∑û">ÂπøÂ∑û</option>
                                <option value="Ê∑±Âú≥">Ê∑±Âú≥</option>
                                <option value="Êù≠Â∑û">Êù≠Â∑û</option>
                                <option value="ÊàêÈÉΩ">ÊàêÈÉΩ</option>
                                <option value="Ë•øÂÆâ">Ë•øÂÆâ</option>
                                <option value="ÈùíÂ≤õ">ÈùíÂ≤õ</option>
                                <option value="Âé¶Èó®">Âé¶Èó®</option>
                            </select>
                        </div>
                        <div class="form-group">
                            <label class="form-label">Âå∫Âüü</label>
                            <input type="text" class="form-control" name="district" placeholder="Â¶ÇÔºöÊúùÈò≥Âå∫">
                        </div>
                    </div>

                    <div class="form-group">
                        <label class="form-label">ËØ¶ÁªÜÂú∞ÂùÄ *</label>
                        <input type="text" class="form-control" name="address" required placeholder="ËØ∑ËæìÂÖ•ËØ¶ÁªÜÂú∞ÂùÄ">
                    </div>

                    <div class="form-group">
                        <label class="form-label">ÊàøÊ∫êÊèèËø∞</label>
                        <textarea class="form-control" name="description" rows="3" placeholder="ËØ∑ÊèèËø∞ÊàøÊ∫êÁâπËâ≤„ÄÅÂë®ËæπÁéØÂ¢ÉÁ≠â"></textarea>
                    </div>

                    <div class="form-row">
                        <div class="form-group">
                            <label class="form-label">ÊØèÊôö‰ª∑Ê†º (ÂÖÉ) *</label>
                            <input type="number" class="form-control" name="pricePerNight" required min="0" step="0.01">
                        </div>
                        <div class="form-group">
                            <label class="form-label">ÊúÄÂ§ßÂÖ•‰Ωè‰∫∫Êï∞ *</label>
                            <input type="number" class="form-control" name="maxGuests" required min="1" max="20">
                        </div>
                    </div>

                    <div class="form-row">
                        <div class="form-group">
                            <label class="form-label">ÊàøÈó¥Èù¢ÁßØ („é°)</label>
                            <input type="number" class="form-control" name="area" min="0" step="0.1">
                        </div>
                        <div class="form-group">
                            <label class="form-label">Ê•ºÂ±Ç</label>
                            <input type="number" class="form-control" name="floor" min="1" max="100">
                        </div>
                    </div>

                    <div class="form-row">
                        <div class="form-group">
                            <label class="form-label">ÂÖ•‰ΩèÊó∂Èó¥</label>
                            <input type="time" class="form-control" name="checkInTime" value="14:00">
                        </div>
                        <div class="form-group">
                            <label class="form-label">ÈÄÄÊàøÊó∂Èó¥</label>
                            <input type="time" class="form-control" name="checkOutTime" value="12:00">
                        </div>
                    </div>

                    <div class="form-group">
                        <label class="form-label">ÊàøÈó¥ËÆæÊñΩ</label>
                        <div class="checkbox-group">
                            <label><input type="checkbox" name="facilities" value="WiFi"> WiFi</label>
                            <label><input type="checkbox" name="facilities" value="Á©∫Ë∞É"> Á©∫Ë∞É</label>
                            <label><input type="checkbox" name="facilities" value="ÁîµËßÜ"> ÁîµËßÜ</label>
                            <label><input type="checkbox" name="facilities" value="Ê¥óË°£Êú∫"> Ê¥óË°£Êú∫</label>
                            <label><input type="checkbox" name="facilities" value="ÂÜ∞ÁÆ±"> ÂÜ∞ÁÆ±</label>
                            <label><input type="checkbox" name="facilities" value="Âé®Êàø"> Âé®Êàø</label>
                            <label><input type="checkbox" name="facilities" value="ÂÅúËΩ¶‰Ωç"> ÂÅúËΩ¶‰Ωç</label>
                            <label><input type="checkbox" name="facilities" value="ÂÅ•Ë∫´Êàø"> ÂÅ•Ë∫´Êàø</label>
                        </div>
                    </div>

                    <div class="form-group">
                        <label class="form-label">ÊàøÊ∫êÁä∂ÊÄÅ</label>
                        <select class="form-control" name="status">
                            <option value="1">‰∏äÊû∂</option>
                            <option value="0">‰∏ãÊû∂</option>
                            <option value="2">Áª¥Êä§‰∏≠</option>
                        </select>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-outline" onclick="closeAddRoomModal()">ÂèñÊ∂à</button>
                <button type="button" class="btn btn-primary" onclick="submitAddRoom()">
                    <i class="bi bi-check"></i> Ê∑ªÂä†ÊàøÊ∫ê
                </button>
            </div>
            </div>
        </div>
    </div>

    <script>
        let currentPage = 1;
        const pageSize = 5;

        // È°µÈù¢Âä†ËΩΩÊó∂Ëé∑ÂèñÊàøÊ∫êÂàóË°®
        document.addEventListener('DOMContentLoaded', function() {
            console.log('È°µÈù¢Âä†ËΩΩÂÆåÊàê');
            loadRooms();

            // ÁªëÂÆöÂõûËΩ¶ÊêúÁ¥¢
            document.getElementById('searchKeyword').addEventListener('keypress', function(e) {
                if (e.key === 'Enter') {
                    searchRooms();
                }
            });

            // ÁªëÂÆöÊ®°ÊÄÅÊ°ÜÁÇπÂáªÂ§ñÈÉ®ÂÖ≥Èó≠‰∫ã‰ª∂
            document.addEventListener('click', function(e) {
                if (e.target.classList.contains('modal')) {
                    e.target.classList.remove('show');
                }
            });
        });

        // Âä†ËΩΩÊàøÊ∫êÂàóË°®
        function loadRooms(page = 1) {
            console.log('Âä†ËΩΩÊàøÊ∫êÂàóË°®ÔºåÈ°µÁ†Å:', page);

            const city = document.getElementById('cityFilter').value;
            const roomType = document.getElementById('roomTypeFilter').value;
            const status = document.getElementById('statusFilter').value;
            const keyword = document.getElementById('searchKeyword').value;

            const params = new URLSearchParams({
                pageNum: page,
                pageSize: pageSize
            });

            if (city) params.append('city', city);
            if (roomType) params.append('roomType', roomType);
            if (status) params.append('status', status);
            if (keyword) params.append('keyword', keyword);

            console.log('ËØ∑Ê±ÇÂèÇÊï∞:', params.toString());

            fetch('${pageContext.request.contextPath}/room/manage/list?' + params)
                .then(response => {
                    console.log('ÂìçÂ∫îÁä∂ÊÄÅ:', response.status);
                    return response.json();
                })
                .then(result => {
                    console.log('APIÂìçÂ∫î:', result);
                    if (result.code === 200) {
                        const pageData = result.data;
                        console.log('ÊàøÊ∫êÊï∞ÊçÆ:', pageData);
                        renderRoomTable(pageData.list || []);
                        renderPagination(pageData.pageNum, pageData.pages, pageData.total);
                        currentPage = page;
                    } else {
                        console.error('APIÈîôËØØ:', result.message);
                        alert('Âä†ËΩΩÊàøÊ∫êÂàóË°®Â§±Ë¥•: ' + result.message);
                    }
                })
                .catch(error => {
                    console.error('ËØ∑Ê±ÇÂ§±Ë¥•:', error);
                    alert('Âä†ËΩΩÊàøÊ∫êÂàóË°®Â§±Ë¥•: ' + error.message);
                });
        }

        // Ê∏≤ÊüìÊàøÊ∫êË°®Ê†º
        function renderRoomTable(rooms) {
            console.log('Ê∏≤ÊüìÊàøÊ∫êË°®Ê†ºÔºåÊï∞ÊçÆ:', rooms);
            const tbody = document.getElementById('roomTableBody');
            tbody.innerHTML = '';

            if (!rooms || rooms.length === 0) {
                tbody.innerHTML = '<tr><td colspan="9" class="text-center">ÊöÇÊó†ÊàøÊ∫êÊï∞ÊçÆ</td></tr>';
                return;
            }

            rooms.forEach(room => {
                console.log('Â§ÑÁêÜÊàøÊ∫ê:', room);
                const row = document.createElement('tr');

                // ÊûÑÂª∫ÂõæÁâáÁä∂ÊÄÅÊòæÁ§∫
                const imageStatus = room.coverImage
                    ? '<img src="' + room.coverImage + '" alt="ÊàøÊ∫êÂõæÁâá" style="width: 50px; height: 50px; object-fit: cover; border-radius: 4px;" onerror="this.style.display=\'none\'; this.parentNode.innerHTML=\'<span style=\\\'color: #6c757d;\\\'>Êó†ÂõæÁâá</span>\';">'
                    : '<span style="color: #6c757d;">Êó†ÂõæÁâá</span>';

                // ÊûÑÂª∫Áä∂ÊÄÅÂæΩÁ´†
                const statusBadge = getStatusBadge(room.status);

                row.innerHTML =
                    '<td class="text-center">' + (room.id || '-') + '</td>' +
                    '<td class="text-center">' + imageStatus + '</td>' +
                    '<td class="text-center">' + (room.roomName || '-') + '</td>' +
                    '<td class="text-center">' + (room.city || '-') + '</td>' +
                    '<td class="text-center">' + getRoomTypeText(room.roomType) + '</td>' +
                    '<td class="text-center">¬•' + (room.pricePerNight ? room.pricePerNight.toFixed(2) : '0.00') + '</td>' +
                    '<td class="text-center">' + statusBadge + '</td>' +
                    '<td class="text-center">' + formatDate(room.createTime) + '</td>' +
                    '<td class="text-center action-buttons">' +
                        '<button class="btn btn-primary btn-action" onclick="editRoom(' + room.id + ')" title="ÁºñËæë">' +
                            '<i class="bi bi-pencil"></i>' +
                        '</button>' +
                        '<button class="btn btn-danger btn-action" onclick="deleteRoom(' + room.id + ')" title="Âà†Èô§">' +
                            '<i class="bi bi-trash"></i>' +
                        '</button>' +
                    '</td>';

                tbody.appendChild(row);
            });
        }

        // Ëé∑ÂèñÁä∂ÊÄÅÂæΩÁ´†
        function getStatusBadge(status) {
            switch(status) {
                case 1:
                    return '<span class="badge badge-success">ÂèØÁî®</span>';
                case 0:
                    return '<span class="badge badge-secondary">‰∏ãÊû∂</span>';
                case 2:
                    return '<span class="badge badge-warning">Áª¥Êä§‰∏≠</span>';
                default:
                    return '<span class="badge badge-secondary">Êú™Áü•</span>';
            }
        }

        // Ëé∑ÂèñÊàøÂûãÊñáÊú¨
        function getRoomTypeText(roomType) {
            if (!roomType) return 'Êú™Áü•';

            // Ê†πÊçÆÂÆûÈôÖÊï∞ÊçÆÂ∫ì‰∏≠ÁöÑÊàøÂûãÂÄºËøõË°åÊò†Â∞Ñ
            const types = {
                'Êï¥Â•óÊàøÂ≠ê': 'Êï¥Â•óÊàøÂ≠ê',
                'Áã¨Á´ãÊàøÈó¥': 'Áã¨Á´ãÊàøÈó¥',
                'Âêà‰ΩèÊàøÈó¥': 'Âêà‰ΩèÊàøÈó¥',
                'Âçï‰∫∫Èó¥': 'Âçï‰∫∫Èó¥',
                'Âèå‰∫∫Èó¥': 'Âèå‰∫∫Èó¥',
                'Â•óÊàø': 'Â•óÊàø',
                'ÂÖ¨ÂØì': 'ÂÖ¨ÂØì'
            };
            return types[roomType] || roomType;
        }

        // Ê†ºÂºèÂåñÊó•Êúü
        function formatDate(dateString) {
            if (!dateString) return '-';
            const date = new Date(dateString);
            return date.toLocaleDateString();
        }



        // Ê∏≤ÊüìÂàÜÈ°µ
        function renderPagination(currentPage, totalPages, totalCount) {
            console.log('ÂàÜÈ°µÂèÇÊï∞:', { currentPage, totalPages, totalCount });
            const container = document.getElementById('paginationContainer');
            if (!container) return;

            container.innerHTML = '';

            if (totalPages <= 1) {
                container.style.display = 'none';
                return;
            }

            container.style.display = 'flex';

            // ‰∏ä‰∏ÄÈ°µÊåâÈíÆ
            const prevBtn = document.createElement('button');
            prevBtn.className = 'pagination-btn pagination-prev' + (currentPage === 1 ? ' disabled' : '');
            prevBtn.innerHTML = '‚Üê ‰∏ä‰∏ÄÈ°µ';
            prevBtn.onclick = function() {
                if (currentPage > 1) {
                    console.log('ÁÇπÂáª‰∏ä‰∏ÄÈ°µ:', currentPage - 1);
                    loadRooms(currentPage - 1);
                }
            };
            container.appendChild(prevBtn);

            // È°µÁ†ÅÊåâÈíÆ
            const startPage = Math.max(1, currentPage - 2);
            const endPage = Math.min(totalPages, currentPage + 2);

            // Á¨¨‰∏ÄÈ°µ
            if (startPage > 1) {
                const firstBtn = createPageButton(1, currentPage);
                container.appendChild(firstBtn);

                if (startPage > 2) {
                    const ellipsis = document.createElement('span');
                    ellipsis.className = 'pagination-ellipsis';
                    ellipsis.textContent = '...';
                    container.appendChild(ellipsis);
                }
            }

            // ‰∏≠Èó¥È°µÁ†Å
            for (let i = startPage; i <= endPage; i++) {
                const pageBtn = createPageButton(i, currentPage);
                container.appendChild(pageBtn);
            }

            // ÊúÄÂêé‰∏ÄÈ°µ
            if (endPage < totalPages) {
                if (endPage < totalPages - 1) {
                    const ellipsis = document.createElement('span');
                    ellipsis.className = 'pagination-ellipsis';
                    ellipsis.textContent = '...';
                    container.appendChild(ellipsis);
                }

                const lastBtn = createPageButton(totalPages, currentPage);
                container.appendChild(lastBtn);
            }

            // ‰∏ã‰∏ÄÈ°µÊåâÈíÆ
            const nextBtn = document.createElement('button');
            nextBtn.className = 'pagination-btn pagination-next' + (currentPage === totalPages ? ' disabled' : '');
            nextBtn.innerHTML = '‰∏ã‰∏ÄÈ°µ ‚Üí';
            nextBtn.onclick = function() {
                if (currentPage < totalPages) {
                    console.log('ÁÇπÂáª‰∏ã‰∏ÄÈ°µ:', currentPage + 1);
                    loadRooms(currentPage + 1);
                }
            };
            container.appendChild(nextBtn);

            // ÂàÜÈ°µ‰ø°ÊÅØ
            const info = document.createElement('div');
            info.className = 'pagination-info';
            info.innerHTML = 'ÂÖ± ' + totalCount + ' Êù°ËÆ∞ÂΩïÔºåÁ¨¨ ' + currentPage + '/' + totalPages + ' È°µ';
            container.appendChild(info);
        }

        // ÂàõÂª∫È°µÁ†ÅÊåâÈíÆ
        function createPageButton(pageNum, currentPage) {
            const btn = document.createElement('button');
            btn.className = 'pagination-btn' + (pageNum === currentPage ? ' active' : '');
            btn.textContent = pageNum;
            btn.onclick = function() {
                console.log('ÁÇπÂáªÈ°µÁ†Å:', pageNum);
                loadRooms(pageNum);
            };
            return btn;
        }

        // ÊêúÁ¥¢ÊàøÊ∫ê
        function searchRooms() {
            loadRooms(1);
        }

        // ÈáçÁΩÆÊàøÊ∫êÁ≠õÈÄâÂô®
        function resetRoomFilters() {
            document.getElementById('cityFilter').value = '';
            document.getElementById('roomTypeFilter').value = '';
            document.getElementById('statusFilter').value = '';
            document.getElementById('searchKeyword').value = '';
            loadRooms(1);
        }

        // ÊòæÁ§∫Ê∑ªÂä†ÊàøÊ∫êÊ®°ÊÄÅÊ°Ü
        function showAddRoomModal() {
            document.getElementById('addRoomModal').classList.add('show');
            // ÈáçÁΩÆË°®Âçï
            document.getElementById('addRoomForm').reset();
        }

        // ÂÖ≥Èó≠Ê∑ªÂä†ÊàøÊ∫êÊ®°ÊÄÅÊ°Ü
        function closeAddRoomModal() {
            document.getElementById('addRoomModal').classList.remove('show');
        }

        // Êèê‰∫§Ê∑ªÂä†ÊàøÊ∫ê
        function submitAddRoom() {
            const form = document.getElementById('addRoomForm');
            const formData = new FormData(form);

            // ÊûÑÂª∫ÊàøÊ∫êÂØπË±°
            const roomData = {
                roomName: formData.get('roomName'),
                roomType: formData.get('roomType'),
                city: formData.get('city'),
                district: formData.get('district'),
                address: formData.get('address'),
                description: formData.get('description'),
                pricePerNight: parseFloat(formData.get('pricePerNight')),
                maxGuests: parseInt(formData.get('maxGuests')),
                area: formData.get('area') ? parseFloat(formData.get('area')) : null,
                floor: formData.get('floor') ? parseInt(formData.get('floor')) : null,
                checkInTime: (formData.get('checkInTime') || '14:00') + ':00',
                checkOutTime: (formData.get('checkOutTime') || '12:00') + ':00',
                status: parseInt(formData.get('status')) || 1
            };

            // Â§ÑÁêÜËÆæÊñΩÂ§çÈÄâÊ°Ü
            const facilities = [];
            const facilityCheckboxes = form.querySelectorAll('input[name="facilities"]:checked');
            facilityCheckboxes.forEach(checkbox => {
                facilities.push(checkbox.value);
            });
            roomData.facilities = JSON.stringify(facilities);

            // È™åËØÅÂøÖÂ°´Â≠óÊÆµ
            if (!roomData.roomName || !roomData.roomType || !roomData.city || !roomData.address || !roomData.pricePerNight || !roomData.maxGuests) {
                alert('ËØ∑Â°´ÂÜôÊâÄÊúâÂøÖÂ°´Â≠óÊÆµ');
                return;
            }

            // ÂèëÈÄÅËØ∑Ê±Ç
            fetch('${pageContext.request.contextPath}/room/create', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(roomData)
            })
            .then(response => response.json())
            .then(data => {
                if (data.code === 200) {
                    alert('ÊàøÊ∫êÊ∑ªÂä†ÊàêÂäü');
                    closeAddRoomModal();
                    loadRooms(1); // ÈáçÊñ∞Âä†ËΩΩÊàøÊ∫êÂàóË°®
                } else {
                    alert('Ê∑ªÂä†Â§±Ë¥•: ' + data.message);
                }
            })
            .catch(error => {
                console.error('Ê∑ªÂä†ÊàøÊ∫êÂ§±Ë¥•:', error);
                alert('Ê∑ªÂä†ÊàøÊ∫êÂ§±Ë¥•');
            });
        }

        // ÁºñËæëÊàøÊ∫ê
        function editRoom(id) {
            // Ëé∑ÂèñÊàøÊ∫êËØ¶ÊÉÖ
            fetch('${pageContext.request.contextPath}/room/detail/' + id + '/api')
                .then(response => response.json())
                .then(data => {
                    if (data.code === 200) {
                        const room = data.data;
                        // Â°´ÂÖÖÁºñËæëË°®Âçï
                        document.getElementById('editRoomId').value = room.id;
                        document.getElementById('editRoomName').value = room.roomName;
                        document.getElementById('editRoomCity').value = room.city;
                        document.getElementById('editRoomType').value = room.roomType;
                        document.getElementById('editRoomPrice').value = room.pricePerNight;
                        document.getElementById('editRoomAddress').value = room.address || '';
                        document.getElementById('editRoomDescription').value = room.description || '';
                        document.getElementById('editRoomMaxGuests').value = room.maxGuests || 2;
                        document.getElementById('editRoomStatus').value = room.status;

                        // Âä†ËΩΩÂõæÁâáÂàóË°®
                        loadEditImages(room.images || []);

                        // ÊòæÁ§∫ÁºñËæëÊ®°ÊÄÅÊ°Ü
                        showEditRoomModal();
                    } else {
                        alert('Ëé∑ÂèñÊàøÊ∫ê‰ø°ÊÅØÂ§±Ë¥•: ' + data.message);
                    }
                })
                .catch(error => {
                    console.error('Ëé∑ÂèñÊàøÊ∫ê‰ø°ÊÅØÂ§±Ë¥•:', error);
                    alert('Ëé∑ÂèñÊàøÊ∫ê‰ø°ÊÅØÂ§±Ë¥•');
                });
        }

        // Êõ¥Êñ∞ÊàøÊ∫ê
        function updateRoom() {
            const form = document.getElementById('editRoomForm');
            const formData = new FormData(form);
            const roomData = Object.fromEntries(formData);

            // Êï∞ÊçÆÈ™åËØÅ
            if (!roomData.roomName || !roomData.city || !roomData.roomType || !roomData.pricePerNight || !roomData.address) {
                alert('ËØ∑Â°´ÂÜôÊâÄÊúâÂøÖÂ°´Â≠óÊÆµ');
                return;
            }

            // Êî∂ÈõÜÂõæÁâáÊï∞ÊçÆ
            const imageInputs = document.querySelectorAll('#editImageList .image-url-input');
            const images = [];
            let coverIndex = -1;

            imageInputs.forEach((input, index) => {
                const url = input.value.trim();
                if (url) {
                    const isCover = input.parentElement.querySelector('.cover-badge') !== null;
                    if (isCover) coverIndex = images.length;

                    images.push({
                        id: input.dataset.imageId || null,
                        imageUrl: url,
                        isCover: isCover ? 1 : 0,
                        sortOrder: index + 1
                    });
                }
            });

            // Â¶ÇÊûúÊ≤°ÊúâËÆæÁΩÆÂ∞ÅÈù¢ÔºåÁ¨¨‰∏ÄÂº†ÂõæÁâá‰Ωú‰∏∫Â∞ÅÈù¢
            if (images.length > 0 && coverIndex === -1) {
                images[0].isCover = 1;
            }

            roomData.images = images;

            fetch('${pageContext.request.contextPath}/room/update', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(roomData)
            })
            .then(response => response.json())
            .then(data => {
                if (data.code === 200) {
                    alert('ÊàøÊ∫êÊõ¥Êñ∞ÊàêÂäü');
                    hideEditRoomModal();
                    loadRooms(currentPage);
                } else {
                    alert('Êõ¥Êñ∞ÊàøÊ∫êÂ§±Ë¥•: ' + data.message);
                }
            })
            .catch(error => {
                console.error('Êõ¥Êñ∞ÊàøÊ∫êÂ§±Ë¥•:', error);
                alert('Êõ¥Êñ∞ÊàøÊ∫êÂ§±Ë¥•');
            });
        }

        // ÊòæÁ§∫ÁºñËæëÊàøÊ∫êÊ®°ÊÄÅÊ°Ü
        function showEditRoomModal() {
            document.getElementById('editRoomModal').classList.add('show');
            document.getElementById('editRoomModal').style.display = 'flex';
        }

        // ÈöêËóèÁºñËæëÊàøÊ∫êÊ®°ÊÄÅÊ°Ü
        function hideEditRoomModal() {
            document.getElementById('editRoomModal').classList.remove('show');
            document.getElementById('editRoomModal').style.display = 'none';
        }

        // Âä†ËΩΩÁºñËæëÂõæÁâáÂàóË°®
        function loadEditImages(images) {
            const imageList = document.getElementById('editImageList');
            imageList.innerHTML = '';

            if (images && images.length > 0) {
                images.forEach((image, index) => {
                    addEditImageItem(image.imageUrl, index === 0, image.id);
                });
            } else {
                // Â¶ÇÊûúÊ≤°ÊúâÂõæÁâáÔºåÊ∑ªÂä†‰∏Ä‰∏™Á©∫ÁöÑËæìÂÖ•Ê°Ü
                addEditImageItem('', true);
            }
        }

        // Ê∑ªÂä†ÁºñËæëÂõæÁâáÈ°π
        function addEditImageItem(url = '', isCover = false, imageId = null) {
            const imageList = document.getElementById('editImageList');
            const imageItem = document.createElement('div');
            imageItem.className = 'image-item';

            const imgSrc = url || '/hms/static/images/placeholder.png';
            const coverBadge = isCover ? '<span class="cover-badge">Â∞ÅÈù¢</span>' : '';
            const starButton = !isCover ? '<button type="button" class="btn btn-sm btn-outline-success" onclick="setCover(this)" title="ËÆæ‰∏∫Â∞ÅÈù¢"><i class="bi bi-star"></i></button>' : '';

            imageItem.innerHTML =
                '<img class="image-preview" src="' + imgSrc + '" onerror="this.src=\'/hms/static/images/placeholder.png\'" alt="È¢ÑËßà">' +
                '<input type="url" class="form-control image-url-input" placeholder="ËØ∑ËæìÂÖ•ÂõæÁâáURL" value="' + url + '" onchange="updateImagePreview(this)" data-image-id="' + (imageId || '') + '">' +
                coverBadge +
                '<div class="image-actions">' +
                    starButton +
                    '<button type="button" class="btn btn-sm btn-outline-danger" onclick="removeEditImage(this)" title="Âà†Èô§"><i class="bi bi-trash"></i></button>' +
                '</div>';

            imageList.appendChild(imageItem);
        }

        // Ê∑ªÂä†ÁºñËæëÂõæÁâá
        function addEditImage() {
            addEditImageItem();
        }

        // Âà†Èô§ÁºñËæëÂõæÁâá
        function removeEditImage(button) {
            const imageItem = button.closest('.image-item');
            const isCover = imageItem.querySelector('.cover-badge');

            if (isCover) {
                alert('‰∏çËÉΩÂà†Èô§Â∞ÅÈù¢ÂõæÁâáÔºåËØ∑ÂÖàËÆæÁΩÆÂÖ∂‰ªñÂõæÁâá‰∏∫Â∞ÅÈù¢');
                return;
            }

            imageItem.remove();
        }

        // ËÆæÁΩÆÂ∞ÅÈù¢
        function setCover(button) {
            const imageList = document.getElementById('editImageList');
            const allItems = imageList.querySelectorAll('.image-item');

            // ÁßªÈô§ÊâÄÊúâÂ∞ÅÈù¢Ê†áËÆ∞
            allItems.forEach(item => {
                const badge = item.querySelector('.cover-badge');
                const starBtn = item.querySelector('.btn-outline-success');
                if (badge) badge.remove();
                if (starBtn) starBtn.style.display = 'inline-block';
            });

            // Ê∑ªÂä†Êñ∞ÁöÑÂ∞ÅÈù¢Ê†áËÆ∞
            const currentItem = button.closest('.image-item');
            const coverBadge = document.createElement('span');
            coverBadge.className = 'cover-badge';
            coverBadge.textContent = 'Â∞ÅÈù¢';
            currentItem.insertBefore(coverBadge, currentItem.querySelector('.image-actions'));
            button.style.display = 'none';
        }

        // Êõ¥Êñ∞ÂõæÁâáÈ¢ÑËßà
        function updateImagePreview(input) {
            const preview = input.parentElement.querySelector('.image-preview');
            if (input.value) {
                preview.src = input.value;
            } else {
                preview.src = '/hms/static/images/placeholder.png';
            }
        }

        // Âà†Èô§ÊàøÊ∫ê
        function deleteRoom(id) {
            if (confirm('Á°ÆÂÆöË¶ÅÂà†Èô§Ëøô‰∏™ÊàøÊ∫êÂêóÔºüÊ≠§Êìç‰Ωú‰∏çÂèØÊÅ¢Â§çÔºÅ')) {
                fetch('${pageContext.request.contextPath}/room/delete', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/x-www-form-urlencoded',
                    },
                    body: 'roomId=' + id
                })
                .then(response => response.json())
                .then(result => {
                    if (result.success) {
                        alert('ÊàøÊ∫êÂà†Èô§ÊàêÂäü');
                        loadRooms(currentPage);
                    } else {
                        alert('Âà†Èô§Â§±Ë¥•: ' + result.message);
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    alert('Âà†Èô§ÊàøÊ∫êÂ§±Ë¥•');
                });
            }
        }
    </script>
</body>
</html>