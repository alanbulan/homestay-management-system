<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.hms.mapper.UserMapper">

    <!-- 结果映射 -->
    <resultMap id="UserResultMap" type="User">
        <id column="id" property="id"/>
        <result column="username" property="username"/>
        <result column="password" property="password"/>
        <result column="email" property="email"/>
        <result column="phone" property="phone"/>
        <result column="real_name" property="realName"/>
        <result column="avatar" property="avatar"/>
        <result column="user_type" property="userType"/>
        <result column="status" property="status"/>
        <result column="create_time" property="createTime"/>
        <result column="update_time" property="updateTime"/>
        <result column="deleted" property="deleted"/>
    </resultMap>

    <!-- 基础字段 -->
    <sql id="Base_Column_List">
        id, username, password, email, phone, real_name, avatar, 
        user_type, status, create_time, update_time, deleted
    </sql>

    <!-- 查询条件 -->
    <sql id="Where_Clause">
        <where>
            deleted = 0
            <if test="userType != null">
                AND user_type = #{userType}
            </if>
            <if test="status != null">
                AND status = #{status}
            </if>
            <if test="keyword != null and keyword != ''">
                AND (username LIKE CONCAT('%', #{keyword}, '%') 
                     OR real_name LIKE CONCAT('%', #{keyword}, '%')
                     OR email LIKE CONCAT('%', #{keyword}, '%')
                     OR phone LIKE CONCAT('%', #{keyword}, '%'))
            </if>
        </where>
    </sql>

    <!-- 根据ID查询用户 -->
    <select id="selectById" resultMap="UserResultMap">
        SELECT <include refid="Base_Column_List"/>
        FROM user
        WHERE id = #{id} AND deleted = 0
    </select>

    <!-- 根据用户名查询用户 -->
    <select id="selectByUsername" resultMap="UserResultMap">
        SELECT <include refid="Base_Column_List"/>
        FROM user
        WHERE username = #{username} AND deleted = 0
    </select>

    <!-- 根据邮箱查询用户 -->
    <select id="selectByEmail" resultMap="UserResultMap">
        SELECT <include refid="Base_Column_List"/>
        FROM user
        WHERE email = #{email} AND deleted = 0
    </select>

    <!-- 根据手机号查询用户 -->
    <select id="selectByPhone" resultMap="UserResultMap">
        SELECT <include refid="Base_Column_List"/>
        FROM user
        WHERE phone = #{phone} AND deleted = 0
    </select>

    <!-- 查询所有用户 -->
    <select id="selectAll" resultMap="UserResultMap">
        SELECT <include refid="Base_Column_List"/>
        FROM user
        <include refid="Where_Clause"/>
        ORDER BY create_time DESC
        <if test="offset != null and limit != null">
            LIMIT #{offset}, #{limit}
        </if>
    </select>

    <!-- 统计用户数量 -->
    <select id="countUsers" resultType="long">
        SELECT COUNT(*)
        FROM user
        <include refid="Where_Clause"/>
    </select>

    <!-- 插入用户 -->
    <insert id="insert" parameterType="User" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO user (
            username, password, email, phone, real_name, avatar,
            user_type, status, deleted
        ) VALUES (
            #{username}, #{password}, #{email}, #{phone}, #{realName}, #{avatar},
            #{userType}, #{status}, 0
        )
    </insert>

    <!-- 更新用户信息 -->
    <update id="update" parameterType="User">
        UPDATE user
        <set>
            <if test="password != null and password.trim() != ''">password = #{password},</if>
            <if test="email != null">email = #{email},</if>
            <if test="phone != null">phone = #{phone},</if>
            <if test="realName != null">real_name = #{realName},</if>
            <if test="avatar != null">avatar = #{avatar},</if>
            <if test="userType != null">user_type = #{userType},</if>
            <if test="status != null">status = #{status},</if>
            update_time = CURRENT_TIMESTAMP
        </set>
        WHERE id = #{id} AND deleted = 0
    </update>

    <!-- 更新用户状态 -->
    <update id="updateStatus">
        UPDATE user
        SET status = #{status}, update_time = CURRENT_TIMESTAMP
        WHERE id = #{id} AND deleted = 0
    </update>

    <!-- 更新用户密码 -->
    <update id="updatePassword">
        UPDATE user
        SET password = #{password}, update_time = CURRENT_TIMESTAMP
        WHERE id = #{id} AND deleted = 0
    </update>

    <!-- 逻辑删除用户 -->
    <update id="deleteById">
        UPDATE user
        SET deleted = 1, update_time = CURRENT_TIMESTAMP
        WHERE id = #{id}
    </update>

    <!-- 批量逻辑删除用户 -->
    <update id="deleteBatch">
        UPDATE user
        SET deleted = 1, update_time = CURRENT_TIMESTAMP
        WHERE id IN
        <foreach collection="ids" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </update>

    <!-- 检查用户名是否存在 -->
    <select id="existsByUsername" resultType="boolean">
        SELECT COUNT(*) > 0
        FROM user
        WHERE username = #{username} AND deleted = 0
        <if test="excludeId != null">
            AND id != #{excludeId}
        </if>
    </select>

    <!-- 检查邮箱是否存在 -->
    <select id="existsByEmail" resultType="boolean">
        SELECT COUNT(*) > 0
        FROM user
        WHERE email = #{email} AND deleted = 0
        <if test="excludeId != null">
            AND id != #{excludeId}
        </if>
    </select>

    <!-- 检查手机号是否存在 -->
    <select id="existsByPhone" resultType="boolean">
        SELECT COUNT(*) > 0
        FROM user
        WHERE phone = #{phone} AND deleted = 0
        <if test="excludeId != null">
            AND id != #{excludeId}
        </if>
    </select>

    <!-- 统计今日新增用户数 -->
    <select id="countNewUsersToday" resultType="long">
        SELECT COUNT(*)
        FROM user
        WHERE deleted = 0
        AND DATE(create_time) = CURDATE()
    </select>

</mapper>
